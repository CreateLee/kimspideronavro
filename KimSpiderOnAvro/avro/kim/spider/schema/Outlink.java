/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package kim.spider.schema;

@SuppressWarnings("all")
public class Outlink extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"Outlink\",\"namespace\":\"kim.spider.schema\",\"fields\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"anchor\",\"type\":\"string\"},{\"name\":\"fetchInterval\",\"type\":\"int\"},{\"name\":\"extend\",\"type\":{\"type\":\"map\",\"values\":\"string\"}}]}");
  public java.lang.CharSequence url;
  public java.lang.CharSequence anchor;
  public int fetchInterval;
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> extend;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return url;
    case 1: return anchor;
    case 2: return fetchInterval;
    case 3: return extend;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: url = (java.lang.CharSequence)value$; break;
    case 1: anchor = (java.lang.CharSequence)value$; break;
    case 2: fetchInterval = (java.lang.Integer)value$; break;
    case 3: extend = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
